{"tagline":"Ruby gem for interfacing with HAProxy","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# HAProxy RubyGem\r\n\r\nThis gem aims to provide an interface to query HAProxy for statistics,\r\nand eventually management through the sockets API.\r\n\r\n## What's HAProxy?\r\n\r\n[HAProxy](http://haproxy.1wt.eu/) is the _Reliable, High Performance\r\nTCP/HTTP Load Balancer_.\r\n\r\n## Why this gem?\r\n\r\n* I use HAProxy at my work.\r\n* I wanted to know how to create gems.\r\n* I wanted to contribute with OSS.\r\n* Why not?\r\n* All of the above.\r\n\r\n## Example of use\r\n\r\n    #! /usr/bin/env ruby\r\n    require 'haproxy'\r\n    require 'pp'\r\n\r\n    haproxy = HAProxy.read_stats '/path/to/haproxy.stats.socket'\r\n\r\n    pp haproxy.info\r\n\r\n    # {:name=>\"HAProxy\",\r\n    #  :version=>\"1.3.22\",\r\n    #  :release_date=>\"2009/10/14\",\r\n    #  :nbproc=>\"1\",\r\n    #  :process_num=>\"1\",\r\n    #  :pid=>\"10222\",\r\n    #  :uptime=>\"0d 0h33m12s\",\r\n    #  :uptime_sec=>\"1992\",\r\n    #  :memmax_mb=>\"0\",\r\n    #  :ulimit_n=>\"4013\",\r\n    #  :maxsock=>\"4013\",\r\n    #  :maxconn=>\"2000\",\r\n    #  :maxpipes=>\"0\",\r\n    #  :currconns=>\"1\",\r\n    #  :pipesused=>\"0\",\r\n    #  :pipesfree=>\"0\",\r\n    #  :tasks=>\"1\",\r\n    #  :run_queue=>\"1\",\r\n    #  :node=>\"roke\",\r\n    #  :\"description:\"=>nil}\r\n\r\n    pp haproxy.stats\r\n\r\n    # [{:pxname=>\"app1\",\r\n    #   :svname=>\"thin1\",\r\n    #   :qcur=>\"0\",\r\n    #   :qmax=>\"0\",\r\n    #   :scur=>\"0\",\r\n    #   :smax=>\"0\",\r\n    #   :slim=>\"\",\r\n    #   :stot=>\"0\",\r\n    #   :bin=>\"0\",\r\n    #   :bout=>\"0\",\r\n    #   :dreq=>\"\",\r\n    #   :dresp=>\"0\",\r\n    #   :ereq=>\"\",\r\n    #   :econ=>\"0\",\r\n    #   :eresp=>\"0\",\r\n    #   :wretr=>\"0\",\r\n    #   :wredis=>\"0\",\r\n    #   :status=>\"no check\",\r\n    #   :weight=>\"1\",\r\n    #   :act=>\"1\",\r\n    #   :bck=>\"0\",\r\n    #   :chkfail=>\"\",\r\n    #   :chkdown=>\"\",\r\n    #   :lastchg=>\"\",\r\n    #   :downtime=>\"\",\r\n    #   :qlimit=>\"\",\r\n    #   :pid=>\"1\",\r\n    #   :iid=>\"1\",\r\n    #   :sid=>\"1\",\r\n    #   :throttle=>\"\",\r\n    #   :lbtot=>\"0\",\r\n    #   :tracked=>\"\",\r\n    #   :type=>\"2\",\r\n    #   :rate=>\"0\",\r\n    #   :rate_lim=>\"\",\r\n    #   :rate_max=>\"0\"},...]\r\n\r\n#### HAProxy sample configuration\r\n\r\n    global\r\n    \tstats socket haproxy\r\n\r\n    defaults\r\n    \tmode\thttp\r\n    \toption httplog\r\n      option httpclose\r\n    \tretries\t3\r\n    \toption redispatch\r\n    \tmaxconn\t2000\r\n    \tcontimeout\t5000\r\n    \tclitimeout\t50000\r\n    \tsrvtimeout\t50000\r\n      stats uri /haproxy\r\n\r\n    listen app1 0.0.0.0:10000\r\n    \tbalance\troundrobin\r\n\r\n      server thin1 127.0.0.1:10001\r\n      server thin1 127.0.0.1:10002\r\n      server thin1 127.0.0.1:10003\r\n      server thin1 127.0.0.1:10004\r\n      server thin1 127.0.0.1:10005\r\n\r\n    frontend app2\r\n      bind 0.0.0.0:10011\r\n      default_backend app2\r\n\r\n    backend app2\r\n      balance roundrobin\r\n      server thin1 127.0.0.1:10006\r\n      server thin1 127.0.0.1:10007\r\n      server thin1 127.0.0.1:10008\r\n      server thin1 127.0.0.1:10009\r\n      server thin1 127.0.0.1:10010\r\n\r\n## Roadmap\r\n\r\n* Improve documentation\r\n* Improve CSV parsing\r\n* Add tests\r\n* Add examples\r\n* Read stats from HTTP and CSV files\r\n","name":"Haproxy-ruby"}